.test-container
  %h1 SSE Test Page
  
  %button#test-btn Test SSE
  
  #output
    %p Ready to test...

:javascript
  document.getElementById('test-btn').addEventListener('click', async () => {
    const output = document.getElementById('output');
    output.innerHTML = '<p>Starting test...</p>';
    
    try {
      const response = await fetch('/api/v1/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ chat: { message: 'Say hello in 5 words' } })
      });
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const reader = response.body.getReader();
      const decoder = new TextDecoder();
      let buffer = '';
      let messageText = '';
      
      output.innerHTML += '<p>Response received, reading stream...</p>';
      
      while (true) {
        const { done, value } = await reader.read();
        if (done) {
          output.innerHTML += '<p>Stream complete!</p>';
          break;
        }
        
        const chunk = decoder.decode(value, { stream: true });
        buffer += chunk;
        
        // Process complete lines
        const lines = buffer.split('\n');
        buffer = lines.pop() || '';
        
        for (const line of lines) {
          if (line.trim() === '') continue;
          
          output.innerHTML += `<p>Line: <code>${line}</code></p>`;
          
          if (line.startsWith('data: ')) {
            const data = line.slice(6);
            
            if (data === '[DONE]') {
              output.innerHTML += '<p><strong>Received [DONE] signal</strong></p>';
            } else {
              try {
                const parsed = JSON.parse(data);
                if (typeof parsed === 'string') {
                  messageText += parsed;
                  output.innerHTML += `<p>Content: "${parsed}"</p>`;
                  output.innerHTML += `<p><strong>Full message so far: "${messageText}"</strong></p>`;
                }
              } catch (e) {
                output.innerHTML += `<p style="color: red;">Parse error: ${e.message}</p>`;
              }
            }
          }
        }
      }
      
    } catch (error) {
      output.innerHTML += `<p style="color: red;">Error: ${error.message}</p>`;
      console.error('Full error:', error);
    }
  });